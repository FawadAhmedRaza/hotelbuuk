generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum AuthMethod {
  EMAIL
  GOOGLE
}

enum UserType {
  NOMAD
  HOTEL
  GUEST
}

enum BookingStatus {
  PENDING
  ACCEPTED
  REJECTED
}

model User {
  id                           String     @id @default(auto()) @map("_id") @db.ObjectId
  first_name                   String?
  last_name                    String?
  hotel_name                   String?
  user_type                    UserType?
  email                        String     @unique
  password                     String?
  profile_img                  String?
  googleId                     String?
  phone_number                 String?
  terms                        Boolean?
  confirmation_OTP             String?
  forget_password_OTP          String?
  is_verified_user             Boolean?
  is_user_profile_completed    Boolean?
  is_user_type_completed       Boolean?
  is_user_basic_info_completed Boolean?
  auth_method                  AuthMethod @default(EMAIL)
  is_profile_active            Boolean    @default(true)

  hotels          hotel_info[]
  nomad           nomad[]
  guest           guest[]
  facilities      facilities[]
  room_facilities room_facilities[]
  room_types      room_types[]
  amenities       amenities[]

  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime                    @updatedAt
  nomad_event               nomad_event[]
  hotel_event               hotel_event[]
  booking                   booking[]
  event_rules               event_rules[]
  event_safety              event_safety[]
  event_cancellation_policy event_cancellation_policy[]
  notifications             notifications[]
}

model facilities {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  user_id String @db.ObjectId
  user    User   @relation(fields: [user_id], references: [id])

  hotelFacilites hotel_facilities[]
  createdAt      DateTime           @default(now())
  updatedAt      DateTime           @updatedAt
}

model hotel_info {
  id               String  @id @default(auto()) @map("_id") @db.ObjectId
  hotel_name       String?
  hotel_contact_no Int?
  contact_email    String?
  description      String?
  country          String?
  city             String?
  address          String?
  stars            Int?
  hotel_image      String?

  user_id String @db.ObjectId
  user    User   @relation(fields: [user_id], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  hotelFacilites        hotel_facilities[]
  hotel_rooms           hotel_rooms[]
  hotelImages           hotel_images[]
  hotel_internal_nomads hotel_internal_nomads[]
  nomad_events          nomad_event[]
  hotel_event           hotel_event[]
}

model nomad {
  id                      String  @id @default(auto()) @map("_id") @db.ObjectId
  profile_img             String?
  first_name              String?
  last_name               String?
  phone_number            Int?
  email                   String
  experience              String?
  electronics             String?
  manufacturing           String?
  fundraising             String?
  retails                 String?
  projector               String?
  video                   String?
  sample                  String?
  end_date                String?
  start_date              String?
  linkedin                String?
  city                    String?
  country                 String?
  address                 String?
  bio                     String?
  industry                String?
  work_permit_front_img   String?
  work_permit_back_img    String?
  work_permit_expiry_date String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User                  User?                   @relation(fields: [userId], references: [id])
  userId                String?                 @db.ObjectId
  hotel_internal_nomads hotel_internal_nomads[]
  hotel_event           hotel_event[]
  nomad_event           nomad_event[]
}

model guest {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  profile_img  String?
  first_name   String?
  last_name    String?
  phone_number Int?
  email        String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User    User?     @relation(fields: [userId], references: [id])
  userId  String?   @db.ObjectId
  booking booking[]
}

model hotel_images {
  id   String  @id @default(auto()) @map("_id") @db.ObjectId
  img  String
  name String?

  hotel_id  String     @db.ObjectId
  hotel     hotel_info @relation(fields: [hotel_id], references: [id])
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model hotel_facilities {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  hotel_id    String @db.ObjectId
  facility_id String @db.ObjectId

  facility  facilities @relation(fields: [facility_id], references: [id])
  hotel     hotel_info @relation(fields: [hotel_id], references: [id])
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model hotel_rooms {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  room_name         String
  description       String
  maximum_occupancy String
  room_type         String
  price             String
  start_date        String?
  end_date          String?

  hotel_id    String        @db.ObjectId
  hotel       hotel_info    @relation(fields: [hotel_id], references: [id])
  room_images room_images[]

  createdAt                  DateTime                     @default(now())
  updatedAt                  DateTime                     @updatedAt
  room_associated_facilities room_associated_facilities[]
}

model room_types {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String

  user_id   String   @db.ObjectId
  user      User     @relation(fields: [user_id], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model room_facilities {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String

  user_id                    String                       @db.ObjectId
  user                       User                         @relation(fields: [user_id], references: [id])
  room_associated_facilities room_associated_facilities[]
  createdAt                  DateTime                     @default(now())
  updatedAt                  DateTime                     @updatedAt
}

model room_associated_facilities {
  id               String @id @default(auto()) @map("_id") @db.ObjectId
  room_id          String @db.ObjectId
  room_facility_id String @db.ObjectId

  room          hotel_rooms     @relation(fields: [room_id], references: [id])
  room_facility room_facilities @relation(fields: [room_facility_id], references: [id])
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model room_images {
  id   String  @id @default(auto()) @map("_id") @db.ObjectId
  img  String
  name String?

  room_id   String      @db.ObjectId
  room      hotel_rooms @relation(fields: [room_id], references: [id], onDelete: Cascade)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model amenities {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String

  user_id                    String                       @db.ObjectId
  user                       User                         @relation(fields: [user_id], references: [id])
  event_associated_amenities event_associated_amenities[]
  createdAt                  DateTime                     @default(now())
  updatedAt                  DateTime                     @updatedAt
}

model hotel_internal_nomads {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  hotel_id String @db.ObjectId
  nomad_id String @db.ObjectId

  hotel     hotel_info @relation(fields: [hotel_id], references: [id])
  nomad     nomad      @relation(fields: [nomad_id], references: [id])
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model nomad_event {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  title               String
  description         String
  business_category   String
  official_name       String
  accomodation_type   String
  city                String?
  country             String?
  address             String?
  start_date          String?
  end_date            String?
  about_bnb           String?
  // rules
  check_in            Boolean? @default(false)
  cancellation_policy Boolean? @default(false)
  check_out           Boolean? @default(false)
  no_smoking          Boolean? @default(false)
  pets_policy         Boolean? @default(false)
  quiet_hours         Boolean? @default(false)
  pool_usage          Boolean? @default(false)
  payment_policy      Boolean? @default(false)

  price String

  hotel_id String?     @db.ObjectId
  hotel    hotel_info? @relation(fields: [hotel_id], references: [id])

  nomad_id String @db.ObjectId
  nomad    nomad  @relation(fields: [nomad_id], references: [id])

  event_topics                     event_topics[]
  event_images                     event_images[]
  event_associated_amenities       event_associated_amenities[]
  booking                          booking[]
  event_associated_rules           event_associated_rules[]
  event_associated_safeties        event_associated_safeties[]
  event_associated_cancel_policies event_associated_cancel_policies[]

  user_id String @db.ObjectId
  user    User   @relation(fields: [user_id], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model hotel_event {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  title               String
  description         String
  business_category   String
  official_name       String
  start_date          String?
  end_date            String?
  // rules
  check_in            Boolean? @default(false)
  cancellation_policy Boolean? @default(false)
  check_out           Boolean? @default(false)
  no_smoking          Boolean? @default(false)
  pets_policy         Boolean? @default(false)
  quiet_hours         Boolean? @default(false)
  pool_usage          Boolean? @default(false)
  payment_policy      Boolean? @default(false)

  price String

  nomad_id String @db.ObjectId
  nomad    nomad  @relation(fields: [nomad_id], references: [id])

  hotel_id String     @db.ObjectId
  hotel    hotel_info @relation(fields: [hotel_id], references: [id])

  user_id String @db.ObjectId
  user    User   @relation(fields: [user_id], references: [id])

  event_topics                     event_topics[]
  event_associated_amenities       event_associated_amenities[]
  booking                          booking[]
  event_associated_rules           event_associated_rules[]
  event_associated_safeties        event_associated_safeties[]
  event_associated_cancel_policies event_associated_cancel_policies[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model event_topics {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  title       String?
  description String?

  nomad_event_id String?      @db.ObjectId
  nomad_event    nomad_event? @relation(fields: [nomad_event_id], references: [id])

  hotel_event_id String?      @db.ObjectId
  hotel_event    hotel_event? @relation(fields: [hotel_event_id], references: [id])
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model event_images {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  name String?
  img  String

  nomad_event_id String?      @db.ObjectId
  nomad_event    nomad_event? @relation(fields: [nomad_event_id], references: [id])
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model event_associated_amenities {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  amenities_id   String  @db.ObjectId
  nomad_event_id String? @db.ObjectId
  hotel_event_id String? @db.ObjectId

  nomad_event nomad_event? @relation(fields: [nomad_event_id], references: [id])
  amenities   amenities    @relation(fields: [amenities_id], references: [id])
  hotel_event hotel_event? @relation(fields: [hotel_event_id], references: [id])
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model booking {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  no_of_guests   Int
  event_type     String
  total_price    Int
  booking_status BookingStatus @default(PENDING)

  guest_id String @db.ObjectId
  guest    guest  @relation(fields: [guest_id], references: [id])

  hotel_event_id String?      @db.ObjectId
  hotel_event    hotel_event? @relation(fields: [hotel_event_id], references: [id])

  nomad_event_id String?      @db.ObjectId
  nomad_event    nomad_event? @relation(fields: [nomad_event_id], references: [id])

  user_id String @db.ObjectId
  user    User   @relation(fields: [user_id], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model business_amenities {
  id                       String                     @id @default(auto()) @map("_id") @db.ObjectId
  name                     String
  business_facts_amenities business_facts_amenities[]
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @updatedAt
}

model business_facts_amenities {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  business_facts_id     String @db.ObjectId
  business_amenities_id String @db.ObjectId

  business_facts     business_facts     @relation(fields: [business_facts_id], references: [id])
  business_amenities business_amenities @relation(fields: [business_amenities_id], references: [id])
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
}

model business_facts {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  start_date  String
  end_date    String
  price       Int
  cover_img   String

  business_facts_amenities business_facts_amenities[]
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime                   @updatedAt
}

model event_rules {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String

  user_id                String                   @db.ObjectId
  user                   User                     @relation(fields: [user_id], references: [id])
  event_associated_rules event_associated_rules[]
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime                 @updatedAt
}

model event_safety {
  id                        String                      @id @default(auto()) @map("_id") @db.ObjectId
  name                      String
  user_id                   String                      @db.ObjectId
  user                      User                        @relation(fields: [user_id], references: [id])
  event_associated_safeties event_associated_safeties[]
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime                    @updatedAt
}

model event_cancellation_policy {
  id                               String                             @id @default(auto()) @map("_id") @db.ObjectId
  name                             String
  user_id                          String                             @db.ObjectId
  user                             User                               @relation(fields: [user_id], references: [id])
  event_associated_cancel_policies event_associated_cancel_policies[]
  createdAt                        DateTime                           @default(now())
  updatedAt                        DateTime                           @updatedAt
}

model event_associated_rules {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  rules_id       String  @db.ObjectId
  nomad_event_id String? @db.ObjectId
  hotel_event_id String? @db.ObjectId

  event_rules event_rules  @relation(fields: [rules_id], references: [id])
  nomad_event nomad_event? @relation(fields: [nomad_event_id], references: [id])
  hotel_event hotel_event? @relation(fields: [hotel_event_id], references: [id])
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model event_associated_safeties {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  safety_id      String  @db.ObjectId
  nomad_event_id String? @db.ObjectId
  hotel_event_id String? @db.ObjectId

  event_safeties event_safety @relation(fields: [safety_id], references: [id])
  nomad_event    nomad_event? @relation(fields: [nomad_event_id], references: [id])
  hotel_event    hotel_event? @relation(fields: [hotel_event_id], references: [id])
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model event_associated_cancel_policies {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  policy_id      String  @db.ObjectId
  nomad_event_id String? @db.ObjectId
  hotel_event_id String? @db.ObjectId

  event_cancel_policy event_cancellation_policy @relation(fields: [policy_id], references: [id])
  nomad_event         nomad_event?              @relation(fields: [nomad_event_id], references: [id])
  hotel_event         hotel_event?              @relation(fields: [hotel_event_id], references: [id])
  createdAt           DateTime                  @default(now())
  updatedAt           DateTime                  @updatedAt
}

model notifications {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  name    String
  message String
  subject String

  user_id String @db.ObjectId
  user    User   @relation(fields: [user_id], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
